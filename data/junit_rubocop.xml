<?xml version='1.0'?>
<testsuites>
  <testsuite name='rubocop'>
    <testcase classname='data.rubocop.test' name='Migration/DepartmentName'/>
    <testcase classname='data.rubocop.test' name='Bundler/DuplicatedGem'/>
    <testcase classname='data.rubocop.test' name='Bundler/GemComment'/>
    <testcase classname='data.rubocop.test' name='Bundler/GemVersion'/>
    <testcase classname='data.rubocop.test' name='Bundler/InsecureProtocolSource'/>
    <testcase classname='data.rubocop.test' name='Bundler/OrderedGems'/>
    <testcase classname='data.rubocop.test' name='Gemspec/DateAssignment'/>
    <testcase classname='data.rubocop.test' name='Gemspec/DuplicatedAssignment'/>
    <testcase classname='data.rubocop.test' name='Gemspec/OrderedDependencies'/>
    <testcase classname='data.rubocop.test' name='Gemspec/RequiredRubyVersion'/>
    <testcase classname='data.rubocop.test' name='Gemspec/RubyVersionGlobalsUsage'/>
    <testcase classname='data.rubocop.test' name='Layout/AccessModifierIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/ArgumentAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/ArrayAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/AssignmentIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/BeginEndAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/BlockAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/BlockEndNewline'/>
    <testcase classname='data.rubocop.test' name='Layout/CaseIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/ClassStructure'/>
    <testcase classname='data.rubocop.test' name='Layout/ClosingHeredocIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/ClosingParenthesisIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/CommentIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/ConditionPosition'/>
    <testcase classname='data.rubocop.test' name='Layout/DefEndAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/DotPosition'/>
    <testcase classname='data.rubocop.test' name='Layout/ElseAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyComment'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLineAfterGuardClause'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLineAfterMagicComment'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLineAfterMultilineCondition'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLineBetweenDefs'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundAccessModifier'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundArguments'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundAttributeAccessor'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundBeginBody'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundBlockBody'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundClassBody'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundExceptionHandlingKeywords'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundMethodBody'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLinesAroundModuleBody'/>
    <testcase classname='data.rubocop.test' name='Layout/EmptyLines'/>
    <testcase classname='data.rubocop.test' name='Layout/EndAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/EndOfLine'>
      <failure type='Layout/EndOfLine' message='Layout/EndOfLine: Carriage return character missing.'>
        data/rubocop/test.rb:2:1
      </failure>
    </testcase>
    <testcase classname='data.rubocop.test' name='Layout/ExtraSpacing'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstArgumentIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstArrayElementIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstArrayElementLineBreak'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstHashElementIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstHashElementLineBreak'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstMethodArgumentLineBreak'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstMethodParameterLineBreak'/>
    <testcase classname='data.rubocop.test' name='Layout/FirstParameterIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/HashAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/HeredocArgumentClosingParenthesis'/>
    <testcase classname='data.rubocop.test' name='Layout/HeredocIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/IndentationConsistency'/>
    <testcase classname='data.rubocop.test' name='Layout/IndentationStyle'/>
    <testcase classname='data.rubocop.test' name='Layout/IndentationWidth'/>
    <testcase classname='data.rubocop.test' name='Layout/InitialIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/LeadingCommentSpace'/>
    <testcase classname='data.rubocop.test' name='Layout/LeadingEmptyLines'/>
    <testcase classname='data.rubocop.test' name='Layout/LineLength'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineArrayBraceLayout'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineArrayLineBreaks'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineAssignmentLayout'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineBlockLayout'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineHashBraceLayout'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineHashKeyLineBreaks'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineMethodArgumentLineBreaks'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineMethodCallBraceLayout'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineMethodCallIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineMethodDefinitionBraceLayout'/>
    <testcase classname='data.rubocop.test' name='Layout/MultilineOperationIndentation'/>
    <testcase classname='data.rubocop.test' name='Layout/ParameterAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/RedundantLineBreak'/>
    <testcase classname='data.rubocop.test' name='Layout/RescueEnsureAlignment'/>
    <testcase classname='data.rubocop.test' name='Layout/SingleLineBlockChain'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAfterColon'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAfterComma'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAfterMethodName'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAfterNot'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAfterSemicolon'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAroundBlockParameters'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAroundEqualsInParameterDefault'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAroundKeyword'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAroundMethodCallOperator'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceAroundOperators'>
      <failure type='Layout/SpaceAroundOperators' message='Layout/SpaceAroundOperators: Surrounding space missing for operator `=`.'>
        data/rubocop/test.rb:1:6
      </failure>
    </testcase>
    <testcase classname='data.rubocop.test' name='Layout/SpaceBeforeBlockBraces'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceBeforeBrackets'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceBeforeComma'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceBeforeComment'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceBeforeFirstArg'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceBeforeSemicolon'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInLambdaLiteral'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideArrayPercentLiteral'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideArrayLiteralBrackets'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideBlockBraces'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideHashLiteralBraces'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideParens'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsidePercentLiteralDelimiters'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideRangeLiteral'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideReferenceBrackets'/>
    <testcase classname='data.rubocop.test' name='Layout/SpaceInsideStringInterpolation'/>
    <testcase classname='data.rubocop.test' name='Layout/TrailingEmptyLines'>
      <failure type='Layout/TrailingEmptyLines' message='Layout/TrailingEmptyLines: Final newline missing.'>
        data/rubocop/test.rb:2:10
      </failure>
    </testcase>
    <testcase classname='data.rubocop.test' name='Layout/TrailingWhitespace'/>
    <testcase classname='data.rubocop.test' name='Lint/AmbiguousAssignment'/>
    <testcase classname='data.rubocop.test' name='Lint/AmbiguousBlockAssociation'/>
    <testcase classname='data.rubocop.test' name='Lint/AmbiguousOperator'/>
    <testcase classname='data.rubocop.test' name='Lint/AmbiguousRegexpLiteral'/>
    <testcase classname='data.rubocop.test' name='Lint/AssignmentInCondition'/>
    <testcase classname='data.rubocop.test' name='Lint/BigDecimalNew'/>
    <testcase classname='data.rubocop.test' name='Lint/BinaryOperatorWithIdenticalOperands'/>
    <testcase classname='data.rubocop.test' name='Lint/BooleanSymbol'/>
    <testcase classname='data.rubocop.test' name='Lint/CircularArgumentReference'/>
    <testcase classname='data.rubocop.test' name='Lint/ConstantDefinitionInBlock'/>
    <testcase classname='data.rubocop.test' name='Lint/ConstantResolution'/>
    <testcase classname='data.rubocop.test' name='Lint/Debugger'/>
    <testcase classname='data.rubocop.test' name='Lint/DeprecatedClassMethods'/>
    <testcase classname='data.rubocop.test' name='Lint/DeprecatedConstants'/>
    <testcase classname='data.rubocop.test' name='Lint/DeprecatedOpenSSLConstant'/>
    <testcase classname='data.rubocop.test' name='Lint/DisjunctiveAssignmentInConstructor'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateBranch'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateCaseCondition'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateElsifCondition'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateHashKey'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateMethods'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateRegexpCharacterClassElement'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateRequire'/>
    <testcase classname='data.rubocop.test' name='Lint/DuplicateRescueException'/>
    <testcase classname='data.rubocop.test' name='Lint/EachWithObjectArgument'/>
    <testcase classname='data.rubocop.test' name='Lint/ElseLayout'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyBlock'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyClass'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyConditionalBody'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyEnsure'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyExpression'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyFile'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyInterpolation'/>
    <testcase classname='data.rubocop.test' name='Lint/EmptyWhen'/>
    <testcase classname='data.rubocop.test' name='Lint/EnsureReturn'/>
    <testcase classname='data.rubocop.test' name='Lint/ErbNewArguments'/>
    <testcase classname='data.rubocop.test' name='Lint/FlipFlop'/>
    <testcase classname='data.rubocop.test' name='Lint/FloatComparison'/>
    <testcase classname='data.rubocop.test' name='Lint/FloatOutOfRange'/>
    <testcase classname='data.rubocop.test' name='Lint/FormatParameterMismatch'/>
    <testcase classname='data.rubocop.test' name='Lint/HashCompareByIdentity'/>
    <testcase classname='data.rubocop.test' name='Lint/HeredocMethodCallPosition'/>
    <testcase classname='data.rubocop.test' name='Lint/IdentityComparison'/>
    <testcase classname='data.rubocop.test' name='Lint/ImplicitStringConcatenation'/>
    <testcase classname='data.rubocop.test' name='Lint/InheritException'/>
    <testcase classname='data.rubocop.test' name='Lint/IneffectiveAccessModifier'/>
    <testcase classname='data.rubocop.test' name='Lint/InterpolationCheck'/>
    <testcase classname='data.rubocop.test' name='Lint/LambdaWithoutLiteralBlock'/>
    <testcase classname='data.rubocop.test' name='Lint/LiteralAsCondition'/>
    <testcase classname='data.rubocop.test' name='Lint/LiteralInInterpolation'/>
    <testcase classname='data.rubocop.test' name='Lint/Loop'/>
    <testcase classname='data.rubocop.test' name='Lint/MissingCopEnableDirective'/>
    <testcase classname='data.rubocop.test' name='Lint/MissingSuper'/>
    <testcase classname='data.rubocop.test' name='Lint/MixedRegexpCaptureTypes'/>
    <testcase classname='data.rubocop.test' name='Lint/MultipleComparison'/>
    <testcase classname='data.rubocop.test' name='Lint/NestedMethodDefinition'/>
    <testcase classname='data.rubocop.test' name='Lint/NestedPercentLiteral'/>
    <testcase classname='data.rubocop.test' name='Lint/NextWithoutAccumulator'/>
    <testcase classname='data.rubocop.test' name='Lint/NoReturnInBeginEndBlocks'/>
    <testcase classname='data.rubocop.test' name='Lint/NonDeterministicRequireOrder'/>
    <testcase classname='data.rubocop.test' name='Lint/NonLocalExitFromIterator'/>
    <testcase classname='data.rubocop.test' name='Lint/NumberConversion'/>
    <testcase classname='data.rubocop.test' name='Lint/NumberedParameterAssignment'/>
    <testcase classname='data.rubocop.test' name='Lint/OrAssignmentToConstant'/>
    <testcase classname='data.rubocop.test' name='Lint/OrderedMagicComments'/>
    <testcase classname='data.rubocop.test' name='Lint/OutOfRangeRegexpRef'/>
    <testcase classname='data.rubocop.test' name='Lint/ParenthesesAsGroupedExpression'/>
    <testcase classname='data.rubocop.test' name='Lint/PercentStringArray'/>
    <testcase classname='data.rubocop.test' name='Lint/PercentSymbolArray'/>
    <testcase classname='data.rubocop.test' name='Lint/RaiseException'/>
    <testcase classname='data.rubocop.test' name='Lint/RandOne'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantCopDisableDirective'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantCopEnableDirective'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantDirGlobSort'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantRequireStatement'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantSafeNavigation'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantSplatExpansion'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantStringCoercion'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantWithIndex'/>
    <testcase classname='data.rubocop.test' name='Lint/RedundantWithObject'/>
    <testcase classname='data.rubocop.test' name='Lint/RegexpAsCondition'/>
    <testcase classname='data.rubocop.test' name='Lint/RequireParentheses'/>
    <testcase classname='data.rubocop.test' name='Lint/RescueException'/>
    <testcase classname='data.rubocop.test' name='Lint/RescueType'/>
    <testcase classname='data.rubocop.test' name='Lint/ReturnInVoidContext'/>
    <testcase classname='data.rubocop.test' name='Lint/SafeNavigationConsistency'/>
    <testcase classname='data.rubocop.test' name='Lint/SafeNavigationChain'/>
    <testcase classname='data.rubocop.test' name='Lint/SafeNavigationWithEmpty'/>
    <testcase classname='data.rubocop.test' name='Lint/ScriptPermission'/>
    <testcase classname='data.rubocop.test' name='Lint/SelfAssignment'/>
    <testcase classname='data.rubocop.test' name='Lint/SendWithMixinArgument'/>
    <testcase classname='data.rubocop.test' name='Lint/ShadowedArgument'/>
    <testcase classname='data.rubocop.test' name='Lint/ShadowedException'/>
    <testcase classname='data.rubocop.test' name='Lint/ShadowingOuterLocalVariable'/>
    <testcase classname='data.rubocop.test' name='Lint/StructNewOverride'/>
    <testcase classname='data.rubocop.test' name='Lint/SuppressedException'/>
    <testcase classname='data.rubocop.test' name='Lint/SymbolConversion'/>
    <testcase classname='data.rubocop.test' name='Lint/Syntax'/>
    <testcase classname='data.rubocop.test' name='Lint/ToEnumArguments'/>
    <testcase classname='data.rubocop.test' name='Lint/ToJSON'/>
    <testcase classname='data.rubocop.test' name='Lint/TopLevelReturnWithArgument'/>
    <testcase classname='data.rubocop.test' name='Lint/TrailingCommaInAttributeDeclaration'/>
    <testcase classname='data.rubocop.test' name='Lint/TripleQuotes'/>
    <testcase classname='data.rubocop.test' name='Lint/UnderscorePrefixedVariableName'/>
    <testcase classname='data.rubocop.test' name='Lint/UnexpectedBlockArity'/>
    <testcase classname='data.rubocop.test' name='Lint/UnifiedInteger'/>
    <testcase classname='data.rubocop.test' name='Lint/UnmodifiedReduceAccumulator'/>
    <testcase classname='data.rubocop.test' name='Lint/UnreachableCode'/>
    <testcase classname='data.rubocop.test' name='Lint/UnreachableLoop'/>
    <testcase classname='data.rubocop.test' name='Lint/UnusedBlockArgument'/>
    <testcase classname='data.rubocop.test' name='Lint/UnusedMethodArgument'/>
    <testcase classname='data.rubocop.test' name='Lint/UriEscapeUnescape'/>
    <testcase classname='data.rubocop.test' name='Lint/UriRegexp'/>
    <testcase classname='data.rubocop.test' name='Lint/UselessAccessModifier'/>
    <testcase classname='data.rubocop.test' name='Lint/UselessAssignment'/>
    <testcase classname='data.rubocop.test' name='Lint/UselessElseWithoutRescue'/>
    <testcase classname='data.rubocop.test' name='Lint/UselessMethodDefinition'/>
    <testcase classname='data.rubocop.test' name='Lint/UselessSetterCall'/>
    <testcase classname='data.rubocop.test' name='Lint/UselessTimes'/>
    <testcase classname='data.rubocop.test' name='Lint/Void'/>
    <testcase classname='data.rubocop.test' name='Metrics/CyclomaticComplexity'/>
    <testcase classname='data.rubocop.test' name='Metrics/AbcSize'/>
    <testcase classname='data.rubocop.test' name='Metrics/BlockLength'/>
    <testcase classname='data.rubocop.test' name='Metrics/BlockNesting'/>
    <testcase classname='data.rubocop.test' name='Metrics/ClassLength'/>
    <testcase classname='data.rubocop.test' name='Metrics/MethodLength'/>
    <testcase classname='data.rubocop.test' name='Metrics/ModuleLength'/>
    <testcase classname='data.rubocop.test' name='Metrics/ParameterLists'/>
    <testcase classname='data.rubocop.test' name='Metrics/PerceivedComplexity'/>
    <testcase classname='data.rubocop.test' name='Naming/AccessorMethodName'/>
    <testcase classname='data.rubocop.test' name='Naming/AsciiIdentifiers'/>
    <testcase classname='data.rubocop.test' name='Naming/BlockParameterName'/>
    <testcase classname='data.rubocop.test' name='Naming/ClassAndModuleCamelCase'/>
    <testcase classname='data.rubocop.test' name='Naming/ConstantName'/>
    <testcase classname='data.rubocop.test' name='Naming/FileName'/>
    <testcase classname='data.rubocop.test' name='Naming/HeredocDelimiterCase'/>
    <testcase classname='data.rubocop.test' name='Naming/HeredocDelimiterNaming'/>
    <testcase classname='data.rubocop.test' name='Naming/MemoizedInstanceVariableName'/>
    <testcase classname='data.rubocop.test' name='Naming/MethodName'/>
    <testcase classname='data.rubocop.test' name='Naming/MethodParameterName'/>
    <testcase classname='data.rubocop.test' name='Naming/BinaryOperatorParameterName'/>
    <testcase classname='data.rubocop.test' name='Naming/PredicateName'/>
    <testcase classname='data.rubocop.test' name='Naming/RescuedExceptionsVariableName'/>
    <testcase classname='data.rubocop.test' name='Naming/VariableName'/>
    <testcase classname='data.rubocop.test' name='Naming/VariableNumber'/>
    <testcase classname='data.rubocop.test' name='Style/AccessModifierDeclarations'/>
    <testcase classname='data.rubocop.test' name='Style/AccessorGrouping'/>
    <testcase classname='data.rubocop.test' name='Style/Alias'/>
    <testcase classname='data.rubocop.test' name='Style/AndOr'/>
    <testcase classname='data.rubocop.test' name='Style/ArgumentsForwarding'/>
    <testcase classname='data.rubocop.test' name='Style/ArrayCoercion'/>
    <testcase classname='data.rubocop.test' name='Style/ArrayJoin'/>
    <testcase classname='data.rubocop.test' name='Style/AsciiComments'/>
    <testcase classname='data.rubocop.test' name='Style/Attr'/>
    <testcase classname='data.rubocop.test' name='Style/AutoResourceCleanup'/>
    <testcase classname='data.rubocop.test' name='Style/BarePercentLiterals'/>
    <testcase classname='data.rubocop.test' name='Style/BeginBlock'/>
    <testcase classname='data.rubocop.test' name='Style/BisectedAttrAccessor'/>
    <testcase classname='data.rubocop.test' name='Style/BlockComments'/>
    <testcase classname='data.rubocop.test' name='Style/BlockDelimiters'/>
    <testcase classname='data.rubocop.test' name='Style/CaseEquality'/>
    <testcase classname='data.rubocop.test' name='Style/CaseLikeIf'/>
    <testcase classname='data.rubocop.test' name='Style/CharacterLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/ClassAndModuleChildren'/>
    <testcase classname='data.rubocop.test' name='Style/ClassCheck'/>
    <testcase classname='data.rubocop.test' name='Style/ClassEqualityComparison'/>
    <testcase classname='data.rubocop.test' name='Style/ClassMethods'/>
    <testcase classname='data.rubocop.test' name='Style/ClassMethodsDefinitions'/>
    <testcase classname='data.rubocop.test' name='Style/ClassVars'/>
    <testcase classname='data.rubocop.test' name='Style/CollectionCompact'/>
    <testcase classname='data.rubocop.test' name='Style/CollectionMethods'/>
    <testcase classname='data.rubocop.test' name='Style/ColonMethodCall'/>
    <testcase classname='data.rubocop.test' name='Style/ColonMethodDefinition'/>
    <testcase classname='data.rubocop.test' name='Style/CombinableLoops'/>
    <testcase classname='data.rubocop.test' name='Style/CommandLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/CommentAnnotation'/>
    <testcase classname='data.rubocop.test' name='Style/CommentedKeyword'/>
    <testcase classname='data.rubocop.test' name='Style/ConditionalAssignment'/>
    <testcase classname='data.rubocop.test' name='Style/ConstantVisibility'/>
    <testcase classname='data.rubocop.test' name='Style/Copyright'/>
    <testcase classname='data.rubocop.test' name='Style/DateTime'/>
    <testcase classname='data.rubocop.test' name='Style/DefWithParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/Dir'/>
    <testcase classname='data.rubocop.test' name='Style/DisableCopsWithinSourceCodeDirective'/>
    <testcase classname='data.rubocop.test' name='Style/DocumentationMethod'/>
    <testcase classname='data.rubocop.test' name='Style/Documentation'/>
    <testcase classname='data.rubocop.test' name='Style/DocumentDynamicEvalDefinition'/>
    <testcase classname='data.rubocop.test' name='Style/DoubleCopDisableDirective'/>
    <testcase classname='data.rubocop.test' name='Style/DoubleNegation'/>
    <testcase classname='data.rubocop.test' name='Style/EachForSimpleLoop'/>
    <testcase classname='data.rubocop.test' name='Style/EachWithObject'/>
    <testcase classname='data.rubocop.test' name='Style/EmptyBlockParameter'/>
    <testcase classname='data.rubocop.test' name='Style/EmptyCaseCondition'/>
    <testcase classname='data.rubocop.test' name='Style/EmptyElse'/>
    <testcase classname='data.rubocop.test' name='Style/EmptyLambdaParameter'/>
    <testcase classname='data.rubocop.test' name='Style/EmptyLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/EmptyMethod'/>
    <testcase classname='data.rubocop.test' name='Style/EndlessMethod'/>
    <testcase classname='data.rubocop.test' name='Style/Encoding'/>
    <testcase classname='data.rubocop.test' name='Style/EndBlock'/>
    <testcase classname='data.rubocop.test' name='Style/EvalWithLocation'/>
    <testcase classname='data.rubocop.test' name='Style/EvenOdd'/>
    <testcase classname='data.rubocop.test' name='Style/ExpandPathArguments'/>
    <testcase classname='data.rubocop.test' name='Style/ExplicitBlockArgument'/>
    <testcase classname='data.rubocop.test' name='Style/ExponentialNotation'/>
    <testcase classname='data.rubocop.test' name='Style/FloatDivision'/>
    <testcase classname='data.rubocop.test' name='Style/For'/>
    <testcase classname='data.rubocop.test' name='Style/FormatString'/>
    <testcase classname='data.rubocop.test' name='Style/FormatStringToken'/>
    <testcase classname='data.rubocop.test' name='Style/FrozenStringLiteralComment'>
      <failure type='Style/FrozenStringLiteralComment' message='Style/FrozenStringLiteralComment: Missing frozen string literal comment.'>
        data/rubocop/test.rb:1:1
      </failure>
    </testcase>
    <testcase classname='data.rubocop.test' name='Style/GlobalStdStream'/>
    <testcase classname='data.rubocop.test' name='Style/GlobalVars'/>
    <testcase classname='data.rubocop.test' name='Style/GuardClause'/>
    <testcase classname='data.rubocop.test' name='Style/HashAsLastArrayItem'/>
    <testcase classname='data.rubocop.test' name='Style/HashConversion'/>
    <testcase classname='data.rubocop.test' name='Style/HashEachMethods'/>
    <testcase classname='data.rubocop.test' name='Style/HashExcept'/>
    <testcase classname='data.rubocop.test' name='Style/HashLikeCase'/>
    <testcase classname='data.rubocop.test' name='Style/HashSyntax'/>
    <testcase classname='data.rubocop.test' name='Style/HashTransformKeys'/>
    <testcase classname='data.rubocop.test' name='Style/HashTransformValues'/>
    <testcase classname='data.rubocop.test' name='Style/IdenticalConditionalBranches'/>
    <testcase classname='data.rubocop.test' name='Style/IfInsideElse'/>
    <testcase classname='data.rubocop.test' name='Style/IfUnlessModifier'/>
    <testcase classname='data.rubocop.test' name='Style/IfUnlessModifierOfIfUnless'/>
    <testcase classname='data.rubocop.test' name='Style/IfWithBooleanLiteralBranches'/>
    <testcase classname='data.rubocop.test' name='Style/IfWithSemicolon'/>
    <testcase classname='data.rubocop.test' name='Style/ImplicitRuntimeError'/>
    <testcase classname='data.rubocop.test' name='Style/InfiniteLoop'/>
    <testcase classname='data.rubocop.test' name='Style/InverseMethods'/>
    <testcase classname='data.rubocop.test' name='Style/InlineComment'/>
    <testcase classname='data.rubocop.test' name='Style/IpAddresses'/>
    <testcase classname='data.rubocop.test' name='Style/KeywordParametersOrder'/>
    <testcase classname='data.rubocop.test' name='Style/Lambda'/>
    <testcase classname='data.rubocop.test' name='Style/LambdaCall'/>
    <testcase classname='data.rubocop.test' name='Style/LineEndConcatenation'/>
    <testcase classname='data.rubocop.test' name='Style/MethodCallWithoutArgsParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/MethodCallWithArgsParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantAssignment'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantFetchBlock'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantFileExtensionInRequire'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantSelfAssignment'/>
    <testcase classname='data.rubocop.test' name='Style/SoleNestedConditional'/>
    <testcase classname='data.rubocop.test' name='Style/StaticClass'/>
    <testcase classname='data.rubocop.test' name='Style/MethodCalledOnDoEndBlock'/>
    <testcase classname='data.rubocop.test' name='Style/MethodDefParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/MinMax'/>
    <testcase classname='data.rubocop.test' name='Style/MissingElse'/>
    <testcase classname='data.rubocop.test' name='Style/MissingRespondToMissing'/>
    <testcase classname='data.rubocop.test' name='Style/MixinGrouping'/>
    <testcase classname='data.rubocop.test' name='Style/MixinUsage'/>
    <testcase classname='data.rubocop.test' name='Style/ModuleFunction'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineBlockChain'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineIfThen'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineIfModifier'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineMethodSignature'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineMemoization'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineTernaryOperator'/>
    <testcase classname='data.rubocop.test' name='Style/MultilineWhenThen'/>
    <testcase classname='data.rubocop.test' name='Style/MultipleComparison'/>
    <testcase classname='data.rubocop.test' name='Style/MutableConstant'/>
    <testcase classname='data.rubocop.test' name='Style/NegatedIf'/>
    <testcase classname='data.rubocop.test' name='Style/NegatedIfElseCondition'/>
    <testcase classname='data.rubocop.test' name='Style/NegatedUnless'/>
    <testcase classname='data.rubocop.test' name='Style/NegatedWhile'/>
    <testcase classname='data.rubocop.test' name='Style/NestedModifier'/>
    <testcase classname='data.rubocop.test' name='Style/NestedParenthesizedCalls'/>
    <testcase classname='data.rubocop.test' name='Style/NestedTernaryOperator'/>
    <testcase classname='data.rubocop.test' name='Style/Next'/>
    <testcase classname='data.rubocop.test' name='Style/NilComparison'/>
    <testcase classname='data.rubocop.test' name='Style/NilLambda'/>
    <testcase classname='data.rubocop.test' name='Style/NonNilCheck'/>
    <testcase classname='data.rubocop.test' name='Style/Not'/>
    <testcase classname='data.rubocop.test' name='Style/NumericLiterals'/>
    <testcase classname='data.rubocop.test' name='Style/NumericLiteralPrefix'/>
    <testcase classname='data.rubocop.test' name='Style/NumericPredicate'/>
    <testcase classname='data.rubocop.test' name='Style/OneLineConditional'/>
    <testcase classname='data.rubocop.test' name='Style/OrAssignment'/>
    <testcase classname='data.rubocop.test' name='Style/OptionHash'/>
    <testcase classname='data.rubocop.test' name='Style/OptionalArguments'/>
    <testcase classname='data.rubocop.test' name='Style/OptionalBooleanParameter'/>
    <testcase classname='data.rubocop.test' name='Style/ParallelAssignment'/>
    <testcase classname='data.rubocop.test' name='Style/ParenthesesAroundCondition'/>
    <testcase classname='data.rubocop.test' name='Style/PercentLiteralDelimiters'/>
    <testcase classname='data.rubocop.test' name='Style/PercentQLiterals'/>
    <testcase classname='data.rubocop.test' name='Style/PerlBackrefs'/>
    <testcase classname='data.rubocop.test' name='Style/PreferredHashMethods'/>
    <testcase classname='data.rubocop.test' name='Style/Proc'/>
    <testcase classname='data.rubocop.test' name='Style/RaiseArgs'/>
    <testcase classname='data.rubocop.test' name='Style/RandomWithOffset'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantArgument'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantBegin'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantCapitalW'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantCondition'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantConditional'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantException'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantFreeze'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantInterpolation'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantPercentQ'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantRegexpCharacterClass'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantRegexpEscape'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantReturn'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantSelf'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantSort'/>
    <testcase classname='data.rubocop.test' name='Style/RedundantSortBy'/>
    <testcase classname='data.rubocop.test' name='Style/RegexpLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/RescueModifier'/>
    <testcase classname='data.rubocop.test' name='Style/RescueStandardError'/>
    <testcase classname='data.rubocop.test' name='Style/ReturnNil'/>
    <testcase classname='data.rubocop.test' name='Style/SafeNavigation'/>
    <testcase classname='data.rubocop.test' name='Style/Sample'/>
    <testcase classname='data.rubocop.test' name='Style/SelfAssignment'/>
    <testcase classname='data.rubocop.test' name='Style/Semicolon'/>
    <testcase classname='data.rubocop.test' name='Style/Send'/>
    <testcase classname='data.rubocop.test' name='Style/SignalException'/>
    <testcase classname='data.rubocop.test' name='Style/SingleArgumentDig'/>
    <testcase classname='data.rubocop.test' name='Style/SingleLineBlockParams'/>
    <testcase classname='data.rubocop.test' name='Style/SingleLineMethods'/>
    <testcase classname='data.rubocop.test' name='Style/SlicingWithRange'/>
    <testcase classname='data.rubocop.test' name='Style/SpecialGlobalVars'/>
    <testcase classname='data.rubocop.test' name='Style/StabbyLambdaParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/StderrPuts'/>
    <testcase classname='data.rubocop.test' name='Style/StringChars'/>
    <testcase classname='data.rubocop.test' name='Style/StringConcatenation'/>
    <testcase classname='data.rubocop.test' name='Style/StringHashKeys'/>
    <testcase classname='data.rubocop.test' name='Style/StringLiterals'>
      <failure type='Style/StringLiterals' message='Style/StringLiterals: Prefer single-quoted strings when you don&apos;t need string interpolation or special symbols.'>
        data/rubocop/test.rb:1:7
      </failure>
    </testcase>
    <testcase classname='data.rubocop.test' name='Style/StringLiteralsInInterpolation'/>
    <testcase classname='data.rubocop.test' name='Style/StringMethods'/>
    <testcase classname='data.rubocop.test' name='Style/Strip'/>
    <testcase classname='data.rubocop.test' name='Style/StructInheritance'/>
    <testcase classname='data.rubocop.test' name='Style/SwapValues'/>
    <testcase classname='data.rubocop.test' name='Style/SymbolArray'/>
    <testcase classname='data.rubocop.test' name='Style/SymbolLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/SymbolProc'/>
    <testcase classname='data.rubocop.test' name='Style/TernaryParentheses'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingBodyOnClass'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingBodyOnMethodDefinition'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingBodyOnModule'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingCommaInArguments'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingCommaInArrayLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingCommaInBlockArgs'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingCommaInHashLiteral'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingMethodEndStatement'/>
    <testcase classname='data.rubocop.test' name='Style/TrailingUnderscoreVariable'/>
    <testcase classname='data.rubocop.test' name='Style/TrivialAccessors'/>
    <testcase classname='data.rubocop.test' name='Style/UnlessElse'/>
    <testcase classname='data.rubocop.test' name='Style/UnlessLogicalOperators'/>
    <testcase classname='data.rubocop.test' name='Style/UnpackFirst'/>
    <testcase classname='data.rubocop.test' name='Style/VariableInterpolation'/>
    <testcase classname='data.rubocop.test' name='Style/WhenThen'/>
    <testcase classname='data.rubocop.test' name='Style/WhileUntilDo'/>
    <testcase classname='data.rubocop.test' name='Style/WhileUntilModifier'/>
    <testcase classname='data.rubocop.test' name='Style/WordArray'/>
    <testcase classname='data.rubocop.test' name='Style/YodaCondition'/>
    <testcase classname='data.rubocop.test' name='Style/ZeroLengthPredicate'/>
    <testcase classname='data.rubocop.test' name='Security/Eval'/>
    <testcase classname='data.rubocop.test' name='Security/JSONLoad'/>
    <testcase classname='data.rubocop.test' name='Security/MarshalLoad'/>
    <testcase classname='data.rubocop.test' name='Security/Open'/>
    <testcase classname='data.rubocop.test' name='Security/YAMLLoad'/>
  </testsuite>
</testsuites>